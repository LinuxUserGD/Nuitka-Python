From 5a7ccc3d03168ca11a13c1904d4558b12ff62449 Mon Sep 17 00:00:00 2001
From: Kay Hayen <kay.hayen@gmail.com>
Date: Sat, 11 Dec 2021 14:10:29 +0100
Subject: [PATCH] Nuitka-Python changes to allow static linking.

---
 numpy/core/setup.py                     | 12 ++++++--
 numpy/distutils/command/build_ext.py    | 37 +++++++++++++++++++------
 numpy/distutils/command/install_clib.py |  2 ++
 3 files changed, 39 insertions(+), 12 deletions(-)

diff --git a/numpy/core/setup.py b/numpy/core/setup.py
index f826b27..5521b96 100644
--- a/numpy/core/setup.py
+++ b/numpy/core/setup.py
@@ -705,9 +705,15 @@ def configuration(parent_package='',top_path=None):
                        join('src', 'private', 'npy_binsearch.h.src'),
                        join('src', 'npysort', 'binsearch.c.src'),
                        ]
-    config.add_library('npysort',
-                       sources=npysort_sources,
-                       include_dirs=[])
+
+    # Nuitka-Python: Disable whole program optimization for Windows.
+    config.add_installed_library('npysort',
+                                 sources=npysort_sources,
+                                 install_dir='lib',
+                                 build_info={
+                                     'include_dirs': [],  # empty list required for creating npy_math_internal.h
+                                     'extra_compiler_args': (['/GL-'] if is_msvc else []),
+                                 })
 
     #######################################################################
     #                        multiarray module                            #
diff --git a/numpy/distutils/command/build_ext.py b/numpy/distutils/command/build_ext.py
index f6bd81b..256c342 100644
--- a/numpy/distutils/command/build_ext.py
+++ b/numpy/distutils/command/build_ext.py
@@ -467,15 +467,34 @@ class build_ext (old_build_ext):
                     fcompiler, library_dirs,
                     unlinkable_fobjects)
 
-        linker(objects, ext_filename,
-               libraries=libraries,
-               library_dirs=library_dirs,
-               runtime_library_dirs=ext.runtime_library_dirs,
-               extra_postargs=extra_args,
-               export_symbols=self.get_export_symbols(ext),
-               debug=self.debug,
-               build_temp=self.build_temp,
-               target_lang=ext.language)
+        # Nuitka-Python: Allow both static and dynamic linking.
+        from __np__ import write_linker_json, shall_link_statically
+        if not shall_link_statically(ext.name):
+            linker(objects, ext_filename,
+                libraries=libraries,
+                library_dirs=library_dirs,
+                runtime_library_dirs=ext.runtime_library_dirs,
+                extra_postargs=extra_args,
+                export_symbols=self.get_export_symbols(ext),
+                debug=self.debug,
+                build_temp=self.build_temp,
+                target_lang=ext.language)
+        else:
+            ext_filename = ext_filename.replace(".so", "")
+
+            self.compiler.create_static_lib(
+                objects, ext_filename, output_dir=os.path.abspath("."), debug=self.debug)
+
+            result_path = \
+                self.compiler.library_filename(ext_filename, output_dir=os.path.abspath("."))
+
+            write_linker_json(
+                result_path = result_path,
+                libraries = self.get_libraries(ext),
+                library_dirs = ext.library_dirs + ['lib'],
+                runtime_library_dirs = ext.runtime_library_dirs,
+                extra_args = extra_args
+            )
 
     def _add_dummy_mingwex_sym(self, c_sources):
         build_src = self.get_finalized_command("build_src").build_src
diff --git a/numpy/distutils/command/install_clib.py b/numpy/distutils/command/install_clib.py
index 662aa00..eae466c 100644
--- a/numpy/distutils/command/install_clib.py
+++ b/numpy/distutils/command/install_clib.py
@@ -34,6 +34,8 @@ class install_clib(Command):
             source = os.path.join(build_dir, name)
             self.mkpath(target_dir)
             self.outfiles.append(self.copy_file(source, target_dir)[0])
+            if os.path.exists(source + '.link.json'):
+                self.outfiles.append(self.copy_file(source + '.link.json', target_dir)[0])
 
     def get_outputs(self):
         return self.outfiles
-- 
2.30.2

